/*
 * Productos.c
 *      Author: Marcos
 */

#include "Productos.h"
#include "Input.h"

int initProduct(sProduct* list, int len){
	int Return;
	Return = -1;

	if(list != NULL && len > 0){
		for(int i = 0; i < len; i++){
			Return = 0;
			list[i].estado = EMPTY;
		}
	}

	return Return;
}

sProduct getProduct(){
	sProduct product;

	product.idProducto = getInt("\nIngrese el id del producto: ");
	getString("Ingrese la descripción del producto: ", product.descripcion, 51);
	product.nacionalidad = getLimitedInt("Ingrese la nacionalidad del producto (1: EEUU - 2: CHINA - 3: OTRO): ", "ERROR! Ingrese nacionalidad (1: EEUU - 2: CHINA - 3: OTRO) :", 1, 3);
	product.tipo = getLimitedInt("Ingrese el tipo de producto (1: IPHONE - 2: MAC - 3: IPAD - 4: ACCESORIOS): ", "ERROR! Ingrese el tipo de producto (1: IPHONE - 2: MAC - 3: IPAD - 4: ACCESORIOS): ", 1, 4);
	product.precio = getFloat("iIngrese el precio del producto: ");
	product.estado = FULL;

	return product;
}

int addProduct(sProduct* list, int len){
	int Return;
	Return = -1;

	if(list != NULL && len > 0){
		for(int i = 0; i < len; i++){
			if(list[i].estado == EMPTY){
				Return = 0;
				list[i] = getProduct();
				printf("Se cargó el producto!\n");
				break;
			}
		}
	}

	return Return;
}

void printOneProduct(sProduct aProduct){
	printf("|%4d|%15s|%6d|%4d|%7.2f|\n", aProduct.idProducto, aProduct.descripcion,
								aProduct.nacionalidad, aProduct.tipo, aProduct.precio);
}

int printAllProducts(sProduct* list, int len){
	int Return;
	Return = -1;

	if(list != NULL && len > 0){
		for(int i = 0; i < len; i++){
			if(list[i].estado == FULL){
				Return = 0;
				printf("#----------------------------------------#\n");
				printf("|%-4s|%-15s|%-6s|%-4s|%-7s|\n", "ID", "DESCRIPCIÓN", "NACION", "TIPO", "PRECIO");
				printf("#----+---------------+------+----+-------#\n");
				break;
			}
		}
		for(int i = 0; i < len; i++){
			if(list[i].estado == FULL){
				printOneProduct(list[i]);
				printf("#----------------------------------------#\n");
			}
		}
	}

	return Return;
}

int findProductById(sProduct* list, int len, int id){
	int Return;
	Return = -1;

	if(list != NULL && len > 0){
		for(int i = 0; i < len; i++){
			if(list[i].estado == FULL && list[i].idProducto == id){
				Return = i;
				break;
			}
		}
	}

	return Return;
}

int removeProduct(sProduct* list, int len){
	int Return;
	int id;
	int index;
	Return = -1;

	if(list != NULL && len > 0){
//		IMPRIMIR LISTA
		id = getInt("Ingrese el id del producto que desea dar de baja: ");
		index = findProductById(list, len, id);
		if(index != -1){
			Return = 0;
			list[index].estado = EMPTY;
			printf("El producto ha sido dado de baja!\n");
		}
	}

	return Return;
}

int modifyProdcut(sProduct* list, int len){
	int Return;
	int id;
	int index;
	int option;
	Return = -1;

	if(list != NULL && len > 0){
//		IMPRIMIR LISTA
		id = getInt("Ingrese el id del producto que desea dar de baja: ");
		index = findProductById(list, len, id);
		if(index != -1){
			Return = 0;
			option = getLimitedFloat("Campos para modificar:\n1. Precio\n2. Tipo\n0. CANCELAR\nElija uno: ", "ERROR! Campos para modificar:\n1. Precio\n2. Tipo\n0. CANCELAR\nElija uno (0-2): ", 0, 2);
			if(option == 0){
				printf("Ha cancelado la modificación.\n");
			}else{
				if(option == 1){
					list[index].precio = getFloat("Ingrese el nuevo precio: ");
				}else{
					list[index].tipo = getInt("Ingrese el nuevo tipo: ");
				}
				printf("Se ha modificado el producto!\n");
			}
		}
	}

	return Return;
}

void sortProductPrice(sProduct* list, int len){
	int Return;
	int flagSwap;
	sProduct aux;
	Return = -1;

	if(list != NULL && len > 0){
		do{
			flagSwap = 0;
			for(int i = 0; i < len; i++){
				if(list[i].estado == FULL && list[i+1].estado == FULL){
					Return = 0;
					if(list[i].precio < list[i+1].precio){
						flagSwap = 1;
						aux = list[i];
						list[i] = list[i+1];
						list[i+1] = aux;
					}
				}
			}
		}while(flagSwap);
	}
}
