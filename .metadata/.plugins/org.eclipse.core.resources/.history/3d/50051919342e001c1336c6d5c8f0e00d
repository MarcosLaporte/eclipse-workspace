#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Biblioteca.h"
#include "Input.h"

int myGets(char cadena[], int dimension);
int esInt(char cadena[], int dimension);
int getAnInt(int *pResultado);
int numberEnRango(int* pResultado, char* message, char* errorMessage, int minimo, int maximo);

int main(void) {
	setbuf(stdout, NULL);

	int number;

	numberEnRango(&number, "Ingrese un number: ",
			"ERROR! El dato ingresado no es válido. Reingrese: ", -5, 150);

	printf("%d", number);

	return 0;
}

int myGets(char cadena[], int dimension ){
	int Return;
	char auxiliar[3000];
	Return=-1;
	if(cadena != NULL && dimension > 0) {
		fflush(stdin);
		scanf("%[^\n]", auxiliar);
		if(strnlen(auxiliar, sizeof(auxiliar)) <= dimension){
			strncpy(cadena, auxiliar, dimension);
			Return = 0;
		}
	}

	return Return;
}

int esInt(char cadena[], int dimension){
	int Return;
	int i;
	Return = 1;
	for(i = 0;i < dimension  && cadena[i] != '\0' ; i++) {
		if(i == 0 && (cadena[i] == '-' || cadena[i] == '+')){
			continue;
		}
		if(cadena[i] > '9' || cadena[i] < '0'){
			Return = 0;
			break;
		}
	}

	return Return;
} //Calcula si es un number

int getAnInt(int *pResultado){
	int Return;
	char auxiliar[3000];
	Return = -1;

	if(pResultado!=NULL && myGets(auxiliar, sizeof(auxiliar)) == 0 && esInt(auxiliar, sizeof(auxiliar))){
		*pResultado= atoi(auxiliar);
		Return=0;
	}

	return Return;
} //Llama a las dos anteriores

int numberEnRango(int *pResultado, char *message, char *errorMessage, int minimo, int maximo){
	int Return;
	int number;
	int r;
	Return = -1;
	if (pResultado != NULL && message != NULL && errorMessage != NULL && minimo <= maximo){
		printf("%s", message);
		r=getAnInt(&number);
		while ( r!=0|| number < minimo || number > maximo) {
			printf("%s", errorMessage);
			r=getAnInt(&number);
		}
		*pResultado = number;
		Return = 0;
	}
	return Return;
}
