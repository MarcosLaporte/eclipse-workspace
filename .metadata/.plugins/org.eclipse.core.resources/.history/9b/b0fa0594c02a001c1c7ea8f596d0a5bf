/*
 * Input.h
 *      Author: Marcos
 */

#ifndef INPUT_H_
#define INPUT_H_

/// @brief Pide un entero con un mensaje pasado por parámetro.
///
/// @param message - El mensaje a mostrar en pantalla al momento de pedir el entero.
/// @return int - El entero pedido por scanf.
int getInt(char message[]);

/// @brief Pide un entero y lo valida entre un mínimo y un máximo.
///
/// @param message - El mensaje a mostrar en pantalla al momento de pedir el entero.
/// @param errorMessage - El mensaje a mostrar en pantalla si el entero ingresado no entra en los parámetros dados.
/// @param min - El mínimo que puede ser el entero.
/// @param max - El máximo que puede ser el entero.
/// @return int - El entero pedido por scanf.
int getLimitedInt(char message[], char errorMessage[], int min, int max);

float getFloat(char message[]);
float getLimitedFloat(char message[], char errorMessage[], int min, int max);
void printFloat(char message[], float number);
void getSequentialArrayInt(int list[], int length, char message[], char errorMessage[], int min, int max);
void getRandomArrayInt(int list[], int length, char message[], char errorMessage[], int min, int max);
void printArrayInt(char message[], int number[], int length);
void getSequentialArrayFloat(float list[], int length, char message[], char errorMessage[], int min, int max);
void getRandomArrayFloat(float list[], int length, char message[], char errorMessage[], int min, int max);
void printArrayFloat(char message[], float number[], int length);
void getString(char message[], char input[], int length);
void printString(char message[]);
int searchNumber(int list[], int length, float searchedValue);
int getMenuOption();
int getModificationMenu();
void formatName(char input[]);
int checkAlphabetAndSpace(char input[]);
int checkInt(char input[], int length, int* refInt);

#endif /* INPUT_H_ */
